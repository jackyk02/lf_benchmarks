import re
import numpy as np
import scipy.stats as stats

data = """
 CPU: 19.7%
 CPU: 19.4%
 CPU: 15.9%
 CPU: 18.4%
 CPU: 20.9%
 CPU: 22.3%
 CPU: 17.4%
 CPU: 20.9%
 CPU: 17.2%
 CPU: 19.3%
 CPU: 18.4%
 CPU: 20%
 CPU: 18.9%
 CPU: 21.3%
 CPU: 18.6%
 CPU: 19.4%
 CPU: 19.5%
 CPU: 24.8%
 CPU: 21.8%
 CPU: 19.4%
 CPU: 16.1%
 CPU: 14.7%
 CPU: 17.3%
 CPU: 20.1%
 CPU: 18.9%
 CPU: 16.2%
 CPU: 17.6%
 CPU: 16.1%
 CPU: 18%
 CPU: 18.4%
 CPU: 21.1%
 CPU: 20.9%
 CPU: 19.8%
 CPU: 18.9%
 CPU: 18.7%
 CPU: 18.4%
 CPU: 18.5%
 CPU: 22.2%
 CPU: 15.9%
 CPU: 17.8%
 CPU: 19.8%
 CPU: 21.1%
 CPU: 18.5%
 CPU: 14.5%
 CPU: 19.8%
 CPU: 17.4%
 CPU: 16.3%
 CPU: 19.3%
 CPU: 21.3%
 CPU: 21.4%
 CPU: 18.4%
 CPU: 17%
 CPU: 19.9%
 CPU: 19.8%
 CPU: 16%
 CPU: 17.5%
 CPU: 19.8%
 CPU: 20.4%
 CPU: 17.6%
 CPU: 19.8%
 CPU: 20.5%
 CPU: 16.5%
 CPU: 19.3%
 CPU: 20.5%
 CPU: 15.8%
 CPU: 21.7%
 CPU: 21.1%
 CPU: 18.5%
 CPU: 20.6%
 CPU: 18.6%
 CPU: 18.1%
 CPU: 19.3%
 CPU: 20.8%
 CPU: 20.4%
 CPU: 16.9%
 CPU: 21.1%
 CPU: 17.1%
 CPU: 12%
 CPU: 20.7%
 CPU: 23.3%
 CPU: 19.6%
 CPU: 20%
 CPU: 16.5%
 CPU: 18.8%
 CPU: 19.3%
 CPU: 19.6%
 CPU: 19.1%
 CPU: 18.2%
 CPU: 19.3%
 CPU: 15.4%
 CPU: 21.4%
 CPU: 21.7%
 CPU: 19.8%
 CPU: 19.4%
 CPU: 17.7%
 CPU: 17.2%
 CPU: 16%
 CPU: 22.4%
 CPU: 21.6%
 CPU: 18.2%
 CPU: 17%
 CPU: 18%
 CPU: 20.6%
 CPU: 20.2%
 CPU: 18.7%
 CPU: 21.1%
 CPU: 23.1%
 CPU: 22.2%
 CPU: 20.2%
 CPU: 19.4%
 CPU: 17.2%
 CPU: 22.2%
 CPU: 18.6%
 CPU: 16.6%
 CPU: 20.2%
 CPU: 19.7%
 CPU: 22.1%
 CPU: 17.7%
 CPU: 22.3%
 CPU: 21.3%
 CPU: 19%
 CPU: 21.9%
 CPU: 18.8%
 CPU: 18.3%
 CPU: 22.7%
 CPU: 21%
 CPU: 19.1%
 CPU: 17.6%
 CPU: 18.9%
 CPU: 21.1%
 CPU: 19.9%
 CPU: 18.9%
 CPU: 21.3%
 CPU: 16.6%
 CPU: 19%
 CPU: 16.8%
 CPU: 20%
 CPU: 18.3%
 CPU: 20%
 CPU: 16.6%
 CPU: 15.9%
 CPU: 18.6%
 CPU: 22.3%
 CPU: 20.4%
 CPU: 20%
 CPU: 18.5%
 CPU: 18.9%
 CPU: 19%
 CPU: 19%
 CPU: 20.9%
 CPU: 23.2%
 CPU: 19.4%
 CPU: 16.4%
 CPU: 19.6%
 CPU: 19%
 CPU: 21.8%
 CPU: 17.4%
 CPU: 21.4%
 CPU: 19.6%
 CPU: 18.5%
 CPU: 16.1%
 CPU: 18.5%
 CPU: 19.9%
 CPU: 20.3%
 CPU: 23%
 CPU: 18.6%
 CPU: 20.5%
 CPU: 21.4%
 CPU: 19%
 CPU: 19.8%
 CPU: 18.2%
 CPU: 16.7%
 CPU: 18.6%
 CPU: 19.8%
 CPU: 19.9%
 CPU: 19.3%
 CPU: 17.6%
 CPU: 19.3%
 CPU: 18.6%
 CPU: 21.8%
 CPU: 19.8%
 CPU: 17%
 CPU: 17.2%
 CPU: 21.7%
 CPU: 17.8%
 CPU: 19.3%
 CPU: 24.4%
 CPU: 19.5%
 CPU: 20.1%
 CPU: 17.7%
 CPU: 18.6%
 CPU: 18.5%
 CPU: 22.1%
 CPU: 18.7%
 CPU: 18.2%
 CPU: 17.7%
 CPU: 19.4%
 CPU: 18.7%
 CPU: 21%
 CPU: 19.3%
 CPU: 18.8%
 CPU: 17.8%
 CPU: 15.2%
 CPU: 19.6%
 CPU: 18.8%
 CPU: 18.6%
 CPU: 17.9%
 CPU: 18.8%
 CPU: 20.3%
 CPU: 19.3%
 CPU: 19.7%
 CPU: 19.8%
 CPU: 21.1%
 CPU: 16.5%
 CPU: 17.5%
 CPU: 15.5%
 CPU: 21.5%
 CPU: 22.7%
 CPU: 20.9%
 CPU: 19.9%
 CPU: 17.9%
 CPU: 19.5%
 CPU: 18.3%
 CPU: 18%
 CPU: 19.3%
 CPU: 18.9%
 CPU: 19.7%
 CPU: 18.9%
 CPU: 18.8%
 CPU: 24%
 CPU: 15.7%
 CPU: 19%
 CPU: 19.8%
 CPU: 20%
 CPU: 18.9%
 CPU: 22.6%
 CPU: 17.2%
 CPU: 21%
 CPU: 16.3%
 CPU: 17.4%
 CPU: 12.4%
 CPU: 18.7%
 CPU: 15.3%
 CPU: 18.9%
 CPU: 0.6%
 CPU: 0.2%
 CPU: 0%
"""

# Extract CPU and Memory usage using regex
cpu_usages = np.array([float(value) for value in re.findall(r'CPU: (\d+\.\d+)%', data)])
#memory_usages = np.array([float(value) for value in re.findall(r'Memory: (\d+\.\d+)%', data)])

# Calculate the mean
mean_cpu = np.mean(cpu_usages)
#mean_memory = np.mean(memory_usages)

# Calculate the standard deviation
std_cpu = np.std(cpu_usages)
#std_memory = np.std(memory_usages)

# Calculate the 99% confidence interval
conf_int_cpu = stats.norm.interval(0.99, loc=mean_cpu, scale=std_cpu / np.sqrt(len(cpu_usages)))
#conf_int_memory = stats.norm.interval(0.99, loc=mean_memory, scale=std_memory / np.sqrt(len(memory_usages)))

print(f"Mean CPU Usage: {mean_cpu:.2f}%")
#print(f"Mean Memory Usage: {mean_memory:.2f}%")
print(f"99% Confidence Interval for CPU Usage: ({conf_int_cpu[0]:.2f}%, {conf_int_cpu[1]:.2f}%)")
#print(f"99% Confidence Interval for Memory Usage: ({conf_int_memory[0]:.2f}%, {conf_int_memory[1]:.2f}%)")
